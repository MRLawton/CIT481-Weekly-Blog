---
layout: post
title:  "Blog Post 4"
date:   2020-02-27 0:10:25 -0800
categories: jekyll blog
---
For the fifth week of class, I worked on executing a segment of the group project in the Amazon Web Services (AWS) management console to see how it operated and better my understanding of the necessary components involved in our plan. I focused my efforts on the CodeCommit data repository since it appeared to be the first required part that needed to be setup in order for the other parts to function properly. There were several pages of AWS documentation revolving this matter, but some of them did not connect together and had limited, if any, success. It seemed that the webpages that did reference each other covered material on how to set it up within the console, but they lacked a certain amount of clarity regarding interactions in the terminal window using the AWS CLI. This is the specific area I am having difficulty with right now because I cannot perform commit operations in the terminal  even though the established infrastructure already exists and is listed in the console. I have been trying to perform a commit within the terminal window using the AWS CLI, but every command I enter does not seem to work since the results of the commit are not shown inside the CodeCommit repository I made in the AWS management console. It appears that there are several pages of AWS documentation on this topic, but some of them are not connected together and do not lead anywhere. I followed a few of these pages to build a repository in the console and upload a image to test it. However, when I use the AWS CLI commands listed in the instructions, I either encounter no output or an 403 error message in the terminal. I am attempting to familiarize myself with some of the specific resources that are required for the overall CodePipeline group project by gaining a better understanding of how they function in the console before implementing them with script files containing Terraform code. The best webpages I have found so far that cover this material include https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-ssh-unixes.html#setting-up-ssh-unixes-keys, https://docs.aws.amazon.com/codecommit/latest/userguide/how-to-create-commit.html#how-to-create-commit-cli, https://docs.aws.amazon.com/codecommit/latest/userguide/getting-started-cc.html#getting-started-create-commit, and https://docs.aws.amazon.com/codecommit/latest/userguide/how-to-migrate-repository-local.html#how-to-migrate-local-version. These webpages all seem to discuss the same topic, but handle it differently though. I have tried each method and there has been no change. At the moment, the various webpages I used to construct and interact with the aformentioned CodeCommit repository are listed below: 
https://aws.amazon.com/getting-started/projects/
https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials.html 
https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-simple-codecommit.html 
https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up.html#setting-up-standard 
https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-gc.html#setting-up-gc-iam 
https://docs.aws.amazon.com/codecommit/latest/userguide/getting-started-cc.html#getting-started-cc-next 
https://docs.aws.amazon.com/codecommit/latest/userguide/getting-started-cc.html#getting-started-create-commit 

In addition to testing out the CodeCommit feature, I assembled a number of detailed slides for the presentation on Saturday to inform other people about our plan for the final group project. I constructed five slides that covered topics from the title slide to the source stage involving the CodeCommit data repository. I gave them a greenish theme since it is the spring semester, the month of March is around the corner, and this color seem to be highly visible as well as easy to read. In each of the slides, I inserted a series of images related to the topics they present. These images are also colored green as to match the overall theme of the presentation and add a level of consistency that does not somehow distract the audience from the information being delivered. The first slide I crafted was the title slide, and after that I made the table of contents slide to list the important topics being discussed. Next, I created the project overview and implemented technologies slides to shed light on those key areas by giving them attention and emphasizing their importantance. Then, I formed a slide based on the source stage of the project which entails both the CodeCommit data repository and possibly a S3 bucket resource to keep track of its current state in the cloud. I compiled these slides together in an organized packet and gave each one a set of descriptive speaker notes, so there would be some talking points during the presentation in class. This packet was uploaded to a shared folder I had previously setup on my Google Drive, so I could collaborate with my group and coordinate our efforts. While on there, it is more accessible to my team and they can add their own content and make the necessary changes to the packet as to make it complete. At the moment, It seems we may be a bit shaky in our understanding of certain areas and how to implement them together, so I started the packet of slides based on my personal observations, estimated projections of the future, and our shared plan. It represents our mission in the early stages and maybe subject to change a bit over time. 
