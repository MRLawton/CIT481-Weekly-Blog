---
layout: post
title:  "Blog Post 6"
date:  2020-03-11 0:10:25 -0800
categories: jekyll blog
---
For the seventh week of class, I focused my efforts on completing the second Vocureum assignment that was posted on Canvas. This particular assignment was composed of two significant parts that were divided into two separate labs. Each part of the assignment related to a number of different resources in the Amazon Web Services (AWS) management console and the various operations involving them. In the first part of the assignment, the lab described EBS volumes and how they interact with an EC2 instance in the console. I followed the listed steps that were presented to me during this part of the assignment, and by going over them in detail, I learned about the various resources that were required for them to operate correctly. The lab showed the importance of the overall mounting process and emphasized the correct sequence of steps to follow as to achieve this goal. It placed these steps into a series of phases that covered creating an EBS volume, attaching the volume to an EC2 instance, logging in to the instance, creating an ext3 filesystem on the volume, forming a mount point, mounting the volume at this point, and configuring the fstab under the etc directory. For the third task of the lab, the instructions that were given had me use a SSH client program called PuTTY to establish a remote connection with the preset EC2 instance. It is here that I was shown the type of values to insert into certain fields as to ensure the connection was successfully setup properly. Two notable values that were required by the application included a private key generated by another program known as PuTTYgen and the IPv4 address of the instance needed to create a channel for direct communication with it. Once the process of establishing a secure connection was done, I progressed onwards to entering in specific commands into the terminal displayed within the PuTTY program. The following instructions went over the mounting process in more detail than the those that came before. Some of the lines I found interesting were the "tee -a /etc/fstab" and "df -h /dev/sdf". That is because these two lines represented commands that were not really explained as well as the others. The meaning of the tee command and its specified option are not defined, and the mention of the df command didn't adequately explain how /dev/sdf turns into /dev/xvdf later in the process. These are the only two issues I had when performing the listed steps provided by the first lab. 

In the next part of the assignment, I analyzed the instructions present within the second lab. The content of this lab was solely centered around the creation of an RDS web server offering an interactable web application to the user. In this case, the application was an address book storing the contact information of specific people. It seemed that there were a number of steps that had to be performed to accomplish this goal. Similar to the previous lab, there was a preset EC2 instance that required extra resources and fine tuning to get it to work properly. One of these resources was the RDS subnet group which required multiple subnets from two different availability zones. Each availability zone possesses a certain number of subnets, but the instructions in task two appear to be contradicting the second system architecture diagram that was provided earlier in the lab. They directed me to add both private subnets to the subnet group, but the set of subnets that are specified are only from the first availability zone instead of being from both. In addition, the first set that is specified is the public subnet in Availability Zone A. This might be an error in the tutorial, but it seems that the lab is having me connect the NAT gateway portion in the first availability zone rather than the replicated data stored in the second one to the subnet group. Though I encountered this issue, I followed the provided steps exactly as they were listed and everything still seemed to function properly. This uncertainty could also stem from my inexperience with the specific resources involved and how they interact when operations are being performed. I say this because the set of subnets in the first system architecture diagram differ from those in the second diagram, and I am a bit confused as to how the subnets are being handled in this lab. Even though I am unclear about this matter, the lessons I learned in this tutorial provided me with a better understanding of how these specific resources operate and revealed how they function is in the console. The resulting address book web application featured methods for adding, editing, and deleting the contact information of specific people, but it seemed to be slightly unstable since it had difficulty performing one of these operations. I tried each of these operations in my web browser, but I found that I was only able to edit certain entries that were listed. This inability to alter information and the specification of the RDS subnet group are the two issues I encountered while following the instructions. Whereas more detailed documentation could fix the former, the latter is probably experiencing a small hiccup in the backend code used by Amazon RDS to create the web application. I believe that if I revisit the this material again and focus on the key parts I observed here, then I might be able to ascertain a clearer picture of what is going on as a whole. 






